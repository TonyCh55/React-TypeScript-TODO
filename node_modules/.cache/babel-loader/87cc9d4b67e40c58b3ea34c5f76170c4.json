{"ast":null,"code":"var _jsxFileName = \"/home/tony/Development/react-ts-todo/src/App.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Navbar } from \"./components/navbar\";\nimport { TodoForm } from \"./components/todoForm\";\nimport { TodoList } from \"./components/todoList\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"todos\"));\n  }, [todos]);\n\n  const onAdd = title => {\n    const newTodo = {\n      title,\n      id: Date.now(),\n      completed: false\n    };\n    setTodos(prevState => [newTodo, ...prevState]);\n  };\n\n  const onToggle = id => {\n    setTodos(prevState => prevState.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  };\n\n  const onDelete = id => {\n    const shouldRemove = window.confirm(\"Are you shure you want to delete?\");\n\n    if (shouldRemove) {\n      setTodos(prevState => prevState.filter(todo => todo.id !== id));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    onAdd: onAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onToggle: onToggle,\n    onDelete: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/tony/Development/react-ts-todo/src/App.tsx"],"names":["React","useState","useEffect","Navbar","TodoForm","TodoList","App","todos","setTodos","saved","JSON","parse","localStorage","getItem","onAdd","title","newTodo","id","Date","now","completed","prevState","onToggle","map","todo","onDelete","shouldRemove","window","confirm","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAGA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAU,EAAV,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd;AACD,GAFQ,EAEN,CAACN,KAAD,CAFM,CAAT;;AAIA,QAAMO,KAAK,GAAIC,KAAD,IAAmB;AAC/B,UAAMC,OAAc,GAAG;AACrBD,MAAAA,KADqB;AAErBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFiB;AAGrBC,MAAAA,SAAS,EAAE;AAHU,KAAvB;AAMAZ,IAAAA,QAAQ,CAAEa,SAAD,IAAe,CAACL,OAAD,EAAU,GAAGK,SAAb,CAAhB,CAAR;AACD,GARD;;AAUA,QAAMC,QAAQ,GAAIL,EAAD,IAAgB;AAC/BT,IAAAA,QAAQ,CAAEa,SAAD,IACPA,SAAS,CAACE,GAAV,CAAeC,IAAD,IAAU;AACtB,UAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB;AAClBO,QAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACD;;AACD,aAAOI,IAAP;AACD,KALD,CADM,CAAR;AAQD,GATD;;AAWA,QAAMC,QAAQ,GAAIR,EAAD,IAAgB;AAC/B,UAAMS,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAe,mCAAf,CAArB;;AACA,QAAIF,YAAJ,EAAkB;AAChBlB,MAAAA,QAAQ,CAAEa,SAAD,IAAeA,SAAS,CAACQ,MAAV,CAAkBL,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAvC,CAAhB,CAAR;AACD;AACF,GALD;;AAOA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAwB,IAAA,QAAQ,EAAEe,QAAlC;AAA4C,IAAA,QAAQ,EAAEG,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADF;AAUD,CA7CD;;AA+CA,eAAenB,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Navbar } from \"./components/navbar\";\nimport { TodoForm } from \"./components/todoForm\";\nimport { TodoList } from \"./components/todoList\";\nimport { ITodo } from \"./interfaces\";\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"todos\")!) as ITodo[];\n  }, [todos]);\n\n  const onAdd = (title: string) => {\n    const newTodo: ITodo = {\n      title,\n      id: Date.now(),\n      completed: false,\n    };\n\n    setTodos((prevState) => [newTodo, ...prevState]);\n  };\n\n  const onToggle = (id: number) => {\n    setTodos((prevState) =>\n      prevState.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  };\n\n  const onDelete = (id: number) => {\n    const shouldRemove = window.confirm(\"Are you shure you want to delete?\");\n    if (shouldRemove) {\n      setTodos((prevState) => prevState.filter((todo) => todo.id !== id));\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <TodoForm onAdd={onAdd} />\n\n        <TodoList todos={todos} onToggle={onToggle} onDelete={onDelete} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}